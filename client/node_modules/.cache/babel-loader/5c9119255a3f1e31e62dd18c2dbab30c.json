{"ast":null,"code":"import _slicedToArray from \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/client/src/componenets/Note/Note.tsx\";\nimport React, { createRef, useLayoutEffect, useState } from \"react\";\nimport { Attachments } from \"../Attachments\";\nimport { CurrentDate } from \"../CurrentDate\";\nimport { Edit } from \"../Edit\";\nimport { List } from \"../List\";\nimport { Tags } from \"../Tags\";\nimport { Warning } from \"../Warning\";\nimport styles from \"./Note.module.scss\";\nexport var Note = function Note(_ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      text = _ref.text,\n      type = _ref.type,\n      items = _ref.items,\n      tags = _ref.tags,\n      created = _ref.created,\n      attachments = _ref.attachments,\n      reminder = _ref.reminder,\n      url = _ref.url;\n  var note = createRef();\n\n  var _useState = useState(\"false\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateHeight = _useState2[0],\n      setUpdateHeight = _useState2[1];\n\n  var getStyle = function getStyle() {\n    if (type !== \"list\" && attachments) {\n      return {\n        backgroundColor: \"#e6e6e6\"\n      };\n    } else {\n      if (type === \"list\") {\n        return {\n          backgroundColor: \"#fff\"\n        };\n      }\n\n      return attachments ? {\n        backgroundColor: color\n      } : {\n        backgroundColor: \"#fff\"\n      };\n    }\n  };\n\n  useLayoutEffect(function () {\n    if (note !== null && note.current !== null) {\n      note.current.style.gridRow = \"span 1\";\n      var minHeight = 160;\n      var rows = Math.floor(note.current.offsetHeight / minHeight);\n\n      if (rows > 3) {\n        rows = 3;\n      }\n\n      note.current.style.gridRow = \"span \".concat(rows);\n    }\n  }, [updateHeight]);\n  return React.createElement(\"div\", {\n    ref: note,\n    style: getStyle(),\n    className: \"\".concat(styles.note, \" \").concat(styles[\"size-\".concat(size)]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, type === \"image\" ? React.createElement(\"img\", {\n    style: {\n      minHeight: \"220px\"\n    },\n    className: styles.fullImage,\n    src: url,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }) : null, reminder ? React.createElement(Warning, {\n    reminder: reminder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"\".concat(styles.contentWrapper, \" \").concat(reminder ? styles.contentWrapperReminder : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: type !== \"list\" ? {\n      backgroundColor: color\n    } : {},\n    className: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, type === \"list\" ? React.createElement(List, {\n    update: setUpdateHeight,\n    text: title,\n    items: items,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, title), text ? React.createElement(\"div\", {\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, text && text.split(\"\\n\").map(function (item, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, item);\n  })) : null), React.createElement(\"div\", {\n    className: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Tags, {\n    tags: tags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.footerWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.edit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Edit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(CurrentDate, {\n    created: created,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))))), attachments ? React.createElement(Attachments, {\n    attachments: attachments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }) : null);\n};","map":{"version":3,"sources":["/home/artem/Документы/yandex/homework/client/src/componenets/Note/Note.tsx"],"names":["React","createRef","useLayoutEffect","useState","Attachments","CurrentDate","Edit","List","Tags","Warning","styles","Note","color","size","title","text","type","items","tags","created","attachments","reminder","url","note","updateHeight","setUpdateHeight","getStyle","backgroundColor","current","style","gridRow","minHeight","rows","Math","floor","offsetHeight","fullImage","contentWrapper","contentWrapperReminder","wrapper","content","split","map","item","index","footer","footerWrapper","edit"],"mappings":"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","sourcesContent":["import React, {createRef, useLayoutEffect, useRef, useState} from \"react\";\nimport {Attachments} from \"../Attachments\";\nimport {CurrentDate} from \"../CurrentDate\";\nimport {Edit} from \"../Edit\";\nimport {List} from \"../List\";\nimport {Tags} from \"../Tags\";\nimport {Warning} from \"../Warning\";\nimport styles from \"./Note.module.scss\";\n\nexport interface NoteInterface {\n    color?: string;\n    size?: string;\n    title?: string;\n    text?: string;\n    type?: string;\n    created?: number;\n    reminder?: number;\n    url?: string;\n    tags?: Array<{\n        tag: string,\n    }>;\n    attachments?: Array<{\n        type: string,\n        url: string,\n    }>;\n    items?: Array<{\n        text: string,\n        checked: boolean,\n    }>;\n}\n\nexport const Note: React.FC<NoteInterface> =\n    ({color, size, title, text, type, items, tags, created, attachments, reminder, url}) => {\n        const note: React.RefObject<HTMLInputElement> = createRef();\n        const [updateHeight, setUpdateHeight] = useState(\"false\");\n        const getStyle = () => {\n            if (type !== \"list\" && attachments) {\n                return {backgroundColor: \"#e6e6e6\"};\n            } else {\n                if (type === \"list\") {\n                    return {backgroundColor: \"#fff\"};\n                }\n                return attachments ? {backgroundColor: color} : {backgroundColor: \"#fff\"};\n            }\n        };\n        useLayoutEffect(() => {\n            if (note !== null && note.current !== null) {\n                note.current.style.gridRow = `span 1`;\n                const minHeight = 160;\n                let rows = Math.floor(note.current.offsetHeight / minHeight);\n                if (rows > 3) {\n                    rows = 3;\n                }\n                note.current.style.gridRow = `span ${rows}`;\n            }\n        }, [updateHeight]);\n        return (\n            <div ref={note} style={getStyle()} className={`${styles.note} ${styles[`size-${size}`]}`}>\n                {type === \"image\" ?\n                    <img style={{minHeight: \"220px\"}} className={styles.fullImage} src={url} alt=\"\"/> : null}\n                {reminder ? <Warning reminder={reminder}/> : null}\n                <div className={`${styles.contentWrapper} ${reminder ? styles.contentWrapperReminder : \"\"}`}>\n                    <div style={type !== \"list\" ? {backgroundColor: color} : {}} className={styles.wrapper}>\n                        <div className={styles.content}>\n                            {type === \"list\" ?\n                                <List update={setUpdateHeight} text={title} items={items} color={color}/> :\n                                <div className={styles.title}>{title}</div>}\n                            {text ? <div className={styles.text}>{\n                                text && text.split(\"\\n\").map((item, index) => {\n                                    return <div key={index}>{item}</div>;\n                                })}</div> : null}\n                        </div>\n                        <div className={styles.footer}>\n                            <Tags tags={tags}/>\n                            <div className={styles.footerWrapper}>\n                                <div className={styles.edit}>\n                                    <Edit/>\n                                </div>\n                                <CurrentDate created={created}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {attachments ? <Attachments attachments={attachments}/> : null}\n            </div>\n        );\n    };\n"]},"metadata":{},"sourceType":"module"}