{"ast":null,"code":"import _toConsumableArray from \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/client/src/componenets/List/List.tsx\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"../ListItem\";\nimport styles from \"./List.module.scss\";\nexport var List = function List(_ref) {\n  var update = _ref.update,\n      text = _ref.text,\n      color = _ref.color,\n      items = _ref.items;\n\n  var _useState = useState(items),\n      _useState2 = _slicedToArray(_useState, 2),\n      listItem = _useState2[0],\n      setListItem = _useState2[1];\n\n  var check = function check(e, txt) {\n    e.preventDefault();\n\n    var newItems = listItem && _toConsumableArray(listItem);\n\n    newItems && newItems.forEach(function (item) {\n      if (item.text.localeCompare(txt) === 0) {\n        item.checked = !item.checked;\n      }\n    });\n    setListItem(newItems);\n    update(newItems);\n  };\n\n  var getItems = function getItems(isChecked) {\n    return listItem && listItem.filter(function (item) {\n      return item.checked === isChecked;\n    }).map(function (item, index) {\n      return React.createElement(\"li\", {\n        key: index,\n        onClick: function onClick(e) {\n          return check(e, item.text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        item: item,\n        isChecked: item.checked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: styles.listWrapper,\n    style: {\n      backgroundColor: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: styles.listHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, text), React.createElement(\"ul\", {\n    className: styles.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, getItems(false))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: styles.checkedList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, getItems(true))));\n};","map":{"version":3,"sources":["/home/artem/Документы/yandex/homework/client/src/componenets/List/List.tsx"],"names":["React","useState","ListItem","styles","List","update","text","color","items","listItem","setListItem","check","e","txt","preventDefault","newItems","forEach","item","localeCompare","checked","getItems","isChecked","filter","map","index","listWrapper","backgroundColor","listHeader","list","checkedList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAYA,OAAO,IAAMC,IAAoB,GAAG,SAAvBA,IAAuB,OAAkC;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACpCP,QAAQ,CAACO,KAAD,CAD4B;AAAA;AAAA,MAC7DC,QAD6D;AAAA,MACnDC,WADmD;;AAEpE,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD,EAAqCC,GAArC,EAAqD;AACjED,IAAAA,CAAC,CAACE,cAAF;;AACA,QAAMC,QAAQ,GAAGN,QAAQ,uBAAQA,QAAR,CAAzB;;AACAM,IAAAA,QAAQ,IAAIA,QAAQ,CAACC,OAAT,CAAiB,UAACC,IAAD,EAAU;AACrC,UAAIA,IAAI,CAACX,IAAL,CAAUY,aAAV,CAAwBL,GAAxB,MAAiC,CAArC,EAAwC;AACtCI,QAAAA,IAAI,CAACE,OAAL,GAAe,CAACF,IAAI,CAACE,OAArB;AACD;AACF,KAJW,CAAZ;AAKAT,IAAAA,WAAW,CAACK,QAAD,CAAX;AACAV,IAAAA,MAAM,CAACU,QAAD,CAAN;AACD,GAVD;;AAWA,MAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAwB;AACvC,WAAOZ,QAAQ,IAAIA,QAAQ,CAACa,MAAT,CAAgB,UAACL,IAAD;AAAA,aAAUA,IAAI,CAACE,OAAL,KAAiBE,SAA3B;AAAA,KAAhB,EAChBE,GADgB,CACZ,UAACN,IAAD,EAAOO,KAAP;AAAA,aACH;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAgB,QAAA,OAAO,EAAE,iBAACZ,CAAD;AAAA,iBAAOD,KAAK,CAACC,CAAD,EAAIK,IAAI,CAACX,IAAT,CAAZ;AAAA,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqD,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEW,IAAhB;AAAsB,QAAA,SAAS,EAAEA,IAAI,CAACE,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArD,CADG;AAAA,KADY,CAAnB;AAID,GALD;;AAMA,SACE,0CACE;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACsB,WAAvB;AAAoC,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAEnB;AAAlB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEJ,MAAM,CAACwB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCrB,IAAlC,CADF,EAEE;AAAI,IAAA,SAAS,EAAEH,MAAM,CAACyB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAAC,KAAD,CADX,CAFF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEjB,MAAM,CAAC0B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,CAAC,IAAD,CADX,CADF,CAPF,CADF;AAeD,CAlCM","sourcesContent":["import React, {useState} from \"react\";\nimport {ListItem} from \"../ListItem\";\nimport styles from \"./List.module.scss\";\n\ninterface List {\n  update: any;\n  text?: string;\n  color?: string;\n  items?: Array<{\n    checked: boolean;\n    text: string\n  }>;\n}\n\nexport const List: React.FC<List> = ({update, text, color, items}) => {\n  const [listItem, setListItem] = useState(items);\n  const check = (e: React.MouseEvent<HTMLLIElement>, txt: string) => {\n    e.preventDefault();\n    const newItems = listItem && [...listItem];\n    newItems && newItems.forEach((item) => {\n      if (item.text.localeCompare(txt) === 0) {\n        item.checked = !item.checked;\n      }\n    });\n    setListItem(newItems);\n    update(newItems);\n  };\n  const getItems = (isChecked: boolean) => {\n    return listItem && listItem.filter((item) => item.checked === isChecked)\n      .map((item, index) =>\n        <li key={index} onClick={(e) => check(e, item.text)}><ListItem item={item} isChecked={item.checked}/></li>,\n      );\n  };\n  return (\n    <>\n      <div className={styles.listWrapper} style={{backgroundColor: color}}>\n        <p className={styles.listHeader}>{text}</p>\n        <ul className={styles.list}>\n          {getItems(false)}\n        </ul>\n      </div>\n      <div>\n        <ul className={styles.checkedList}>\n          {getItems(true)}\n        </ul>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}