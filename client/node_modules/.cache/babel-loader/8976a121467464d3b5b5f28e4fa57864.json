{"ast":null,"code":"import _regeneratorRuntime from \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/artem/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/yandex/homework/client/src/componenets/App/App.tsx\";\nimport React from \"react\";\nimport data from \"../data.json\";\nimport { Filter } from \"../Filter\";\nimport { Footer } from \"../Footer\";\nimport { Header } from \"../Header\";\nimport { Note } from \"../Note\";\nimport styles from \"./App.module.scss\";\nimport { Notes } from \"./Notes\";\n\nvar getColor = function getColor(note) {\n  var colorObject = data.colors.find(function (item) {\n    return item.id === note.color;\n  });\n  return colorObject ? colorObject.color : \"#fff\";\n};\n\nvar getTags = function getTags(note) {\n  var tagsList = data.tags.filter(function (item) {\n    return note.tags && note.tags.some(function (num) {\n      return num === item.id;\n    });\n  });\n  return tagsList;\n};\n\nvar getData =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response, body;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/ping\");\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.text();\n\n          case 5:\n            body = _context.sent;\n            return _context.abrupt(\"return\", body);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var App = function App() {\n  var nts = new Notes();\n  getData();\n  Notes.factory(nts, data.notes);\n  var notes = nts.map(function (item, index) {\n    index = index || 0;\n    return React.createElement(Note, {\n      key: item && item.data.created,\n      color: getColor(data.notes[index]),\n      size: item && item.data.size,\n      title: item && item.data.title,\n      text: item && item.data.text,\n      type: item && item.data.type,\n      tags: getTags(data.notes[index]),\n      items: item && item.data.items,\n      created: item && item.data.created,\n      attachments: item && item.data.attachments,\n      reminder: item && item.data.reminder,\n      url: item && item.data.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    colors: data.colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.notesWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, notes))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/artem/Документы/yandex/homework/client/src/componenets/App/App.tsx"],"names":["React","data","Filter","Footer","Header","Note","styles","Notes","getColor","note","colorObject","colors","find","item","id","color","getTags","tagsList","tags","filter","some","num","getData","fetch","response","text","body","App","nts","factory","notes","map","index","created","size","title","type","items","attachments","reminder","url","wrapper","content","notesWrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport data from \"../data.json\";\nimport {Filter} from \"../Filter\";\nimport {Footer} from \"../Footer\";\nimport {Header} from \"../Header\";\nimport {Note} from \"../Note\";\nimport styles from \"./App.module.scss\";\nimport {NoteData} from \"./Notes\";\nimport {Notes} from \"./Notes\";\n\nconst getColor = (note: NoteData) => {\n    const colorObject = data.colors.find((item) => item.id === note.color);\n    return colorObject ? colorObject.color : \"#fff\";\n};\n\nconst getTags = (note: NoteData) => {\n    const tagsList = data.tags.filter((item) =>\n        note.tags && note.tags.some((num) => num === item.id));\n    return tagsList;\n};\n\nconst getData = async () => {\n    const response = await fetch(\"/ping\");\n\n    const body = await response.text();\n    // console.log(body);\n\n    // if (response.status !== 200) throw Error(body.message);\n\n    return body;\n};\n\nexport const App = () => {\n    const nts = new Notes();\n    getData();\n\n    Notes.factory(nts, data.notes);\n\n    const notes = nts.map((item, index) => {\n        index = index || 0;\n        return <Note\n            key={item && item.data.created}\n            color={getColor(data.notes[index])}\n            size={item && item.data.size}\n            title={item && item.data.title}\n            text={item && item.data.text}\n            type={item && item.data.type}\n            tags={getTags(data.notes[index])}\n            items={item && item.data.items}\n            created={item && item.data.created}\n            attachments={item && item.data.attachments}\n            reminder={item && item.data.reminder}\n            url={item && item.data.url}\n        />;\n    });\n    return (\n        <>\n            <div className={styles.wrapper}>\n                <Header/>\n                <div className={styles.content}>\n                    <Filter colors={data.colors}/>\n                    <div className={styles.notesWrapper}>{notes}</div>\n                </div>\n            </div>\n            <Footer/>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}